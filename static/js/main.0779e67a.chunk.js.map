{"version":3,"sources":["Components/Phonebook/PhoneFilter/PhoneFilter.jsx","redux/phonebook/contactsSelector.js","redux/phonebook/phonebookActions.js","Components/Phonebook/PhoneForm/PhoneForm.jsx","Components/Phonebook/PhoneListItem/PhoneListItem.jsx","Components/Phonebook/PhoneList/PhoneList.jsx","Components/Phonebook/Phonebook.js","redux/phonebook/phonebookOperations.js","Components/App.js","redux/phonebook/phonebookReducer.js","redux/store.js","index.js"],"names":["PhoneFilter","filter","setFilter","type","value","onChange","placeholder","className","contactsSelector","state","contacts","errorSelector","error","loaderSelector","isLoading","getFilteredContacts","createSelector","contact","name","toLowerCase","includes","number","getAllContacts","createAction","addContact","deleteContact","resetError","setError","setLoading","PhoneForm","onHandlSubmit","e","preventDefault","props","setState","onHandlChange","target","onSubmit","this","pattern","title","required","Component","connect","ownProps","PhoneListItem","id","onClick","PhoneList","map","Phonebook","a","addContactOperating","deleteContactOperating","getAllContactsOperating","color","height","width","length","filterContacts","mapDispatchToProps","dispatch","axios","get","data","Object","keys","key","response","getState","some","cont","post","delete","App","contactsReducer","createReducer","_","payload","filterReducer","loaderReducer","errorReducer","rootReducer","combineReducers","store","configureStore","reducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0779e67a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nconst PhoneFilter = ({ filter, setFilter }) => {\r\n  // console.log(\"Check filter\", filter);\r\n  return (\r\n    <label>\r\n      Filter:\r\n      <input\r\n        type=\"text\"\r\n        value={filter}\r\n        onChange={setFilter}\r\n        placeholder=\"John Wick or +380000000000\"\r\n        className=\"pt-3 pb-2 block w-full px-0 mt-0 bg-transparent border-0 border-b-2 appearance-none focus:outline-none focus:ring-0 focus:border-black border-gray-200 hover:outline-none hover:ring-0 hover:border-black border-gray-200\"\r\n      ></input>\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default PhoneFilter;\r\n\r\nPhoneFilter.propTypes = {\r\n  filter: PropTypes.string,\r\n  setFilter: PropTypes.func,\r\n};\r\n","import { createSelector } from \"@reduxjs/toolkit\";\r\n\r\nexport const contactsSelector = (state) => state.contacts;\r\nexport const filterSelector = (state) => state.filter;\r\nexport const errorSelector = (state) => state.error;\r\nexport const loaderSelector = (state) => state.isLoading;\r\n\r\nexport const getFilteredContacts = createSelector(\r\n  [contactsSelector, filterSelector],\r\n  (contacts, filter) => {\r\n    return contacts.filter(\r\n      (contact) =>\r\n        contact.name.toLowerCase().includes(filter.toLowerCase()) ||\r\n        contact.number.includes(filter)\r\n    );\r\n  }\r\n);\r\n","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const getAllContacts = createAction(\"contacts/getAllContacts\");\r\nexport const addContact = createAction(\"contacts/addContact\");\r\nexport const deleteContact = createAction(\"contacts/deleteContact\");\r\nexport const setFilter = createAction(\"filter/setFilter\");\r\nexport const resetError = createAction(\"contacts/resetError\");\r\nexport const setError = createAction(\"contacts/setError\");\r\nexport const setLoading = createAction(\"contacts/setLoading\");\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { errorSelector } from \"../../../redux/phonebook/contactsSelector\";\r\nimport { connect } from \"react-redux\";\r\nimport { resetError } from \"../../../redux/phonebook/phonebookActions\";\r\nclass PhoneForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n  onHandlSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.addContact(this.state);\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n  onHandlChange = (e) => {\r\n    this.props.error && this.props.resetError();\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.onHandlSubmit}>\r\n        <label>\r\n          Name:\r\n          <input\r\n            className=\"pt-3 pb-2 block w-full px-0 mt-0 bg-transparent border-0 border-b-2 appearance-none focus:outline-none focus:ring-0 focus:border-black border-gray-200 hover:outline-none hover:ring-0 hover:border-black border-gray-200\"\r\n            type=\"text\"\r\n            name=\"name\"\r\n            onChange={this.onHandlChange}\r\n            value={this.state.name}\r\n            placeholder=\"John Wick\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n          />\r\n        </label>\r\n        <label>\r\n          Number:\r\n          <input\r\n            className=\"pt-3 pb-2 block w-full px-0 mt-0 bg-transparent border-0 border-b-2 appearance-none focus:outline-none focus:ring-0 focus:border-black border-gray-200 hover:outline-none hover:ring-0 hover:border-black border-gray-200\"\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            placeholder=\"+380000000000\"\r\n            required\r\n            onChange={this.onHandlChange}\r\n            value={this.state.number}\r\n          />\r\n        </label>\r\n        <button\r\n          type=\"submit\"\r\n          className=\"w-full px-6 py-3 mt-3 text-lg text-white transition-all duration-150 ease-linear rounded-lg shadow outline-none bg-green-500 hover:bg-green-800 hover:shadow-lg focus:outline-none\"\r\n        >\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state, ownProps) => ({ error: errorSelector(state) });\r\n\r\nexport default connect(mapStateToProps, { resetError })(PhoneForm);\r\n// export default PhoneForm;\r\nPhoneForm.propTypes = {\r\n  addContact: PropTypes.func,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nconst PhoneListItem = ({ contact, deleteContact }) => {\r\n  return (\r\n    <li className=\"mt-4\">\r\n      <span className=\"  mb-1 mt-1\">\r\n        {contact.name + \": \" + contact.number}\r\n      </span>\r\n      <button\r\n        id={contact.id}\r\n        type=\"button\"\r\n        onClick={deleteContact}\r\n        className=\"absolute right-8 px-6 mb-1 mt-1  text-white transition-all duration-150 ease-linear rounded-lg shadow outline-none bg-green-500 hover:bg-red-600 hover:shadow-lg focus:outline-none\"\r\n      >\r\n        DELETE\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\nexport default PhoneListItem;\r\nPhoneListItem.propTypes = {\r\n  deleteContact: PropTypes.func,\r\n  contact: PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    number: PropTypes.string.isRequired,\r\n  }).isRequired,\r\n};\r\n","// import React from \"react\";\r\n// import PropTypes from \"prop-types\";\r\n// const PhoneList = ({ contacts, deleteContact }) => {\r\n//   return (\r\n//     <ul>\r\n//       {contacts.map((contact) => (\r\n//         <li className=\"mt-4\" key={contact.id}>\r\n//           <span className=\"  mb-1 mt-1\">\r\n//             {contact.name + \": \" + contact.number}\r\n//           </span>\r\n\r\n//           <button\r\n//             id={contact.id}\r\n//             type=\"button\"\r\n//             onClick={deleteContact}\r\n//             className=\"absolute right-8 px-6 mb-1 mt-1  text-white transition-all duration-150 ease-linear rounded-lg shadow outline-none bg-green-500 hover:bg-red-600 hover:shadow-lg focus:outline-none\"\r\n//           >\r\n//             DELETE\r\n//           </button>\r\n//         </li>\r\n//       ))}\r\n//     </ul>\r\n//   );\r\n// };\r\n\r\n// export default PhoneList;\r\n\r\n// PhoneList.propTypes = {\r\n//   deleteContact: PropTypes.func,\r\n//   contacts: PropTypes.arrayOf(\r\n//     PropTypes.shape({\r\n//       id: PropTypes.string.isRequired,\r\n//       name: PropTypes.string.isRequired,\r\n//       number: PropTypes.string.isRequired,\r\n//     })\r\n//   ),\r\n// };\r\n\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport PhoneListItem from \"./../PhoneListItem/PhoneListItem\";\r\n\r\nconst PhoneList = ({ contacts, deleteContact }) => {\r\n  return (\r\n    <ul>\r\n      {contacts.map((contact) => (\r\n        <PhoneListItem\r\n          contact={contact}\r\n          key={contact.id}\r\n          deleteContact={deleteContact}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nPhoneList.propTypes = {\r\n  deleteContact: PropTypes.func,\r\n  contacts: PropTypes.arrayOf(PropTypes.object),\r\n};\r\nexport default PhoneList;\r\n","import React, { Component } from \"react\";\r\nimport PhoneFilter from \"./PhoneFilter/PhoneFilter\";\r\nimport PhoneForm from \"./PhoneForm/PhoneForm\";\r\nimport PhoneList from \"./PhoneList/PhoneList\";\r\nimport { connect } from \"react-redux\";\r\nimport { setFilter } from \"../../redux/phonebook/phonebookActions\";\r\nimport {\r\n  addContactOperating,\r\n  deleteContactOperating,\r\n  getAllContactsOperating,\r\n} from \"../../redux/phonebook/phonebookOperations\";\r\nimport {\r\n  contactsSelector,\r\n  errorSelector,\r\n  getFilteredContacts,\r\n  loaderSelector,\r\n} from \"../../redux/phonebook/contactsSelector\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nclass Phonebook extends Component {\r\n  async componentDidMount() {\r\n    this.props.getAllContactsOperating();\r\n  }\r\n\r\n  addContact = async (contact) => {\r\n    this.props.addContactOperating(contact);\r\n  };\r\n\r\n  deleteContact = async (e) => {\r\n    const { id } = e.target;\r\n    this.props.deleteContactOperating(id);\r\n  };\r\n\r\n  setFilter = (e) => {\r\n    const { value } = e.target;\r\n    this.props.setFilter(value);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"relative mx-auto max-w-md px-8 py-12 bg-white border-0 shadow-lg sm:rounded-3xl \">\r\n        {this.props.isLoading && (\r\n          <Loader\r\n            type=\"Oval\"\r\n            color=\"rgb(16, 185, 129)\"\r\n            height={50}\r\n            width={50}\r\n            className=\"  flex flex-wrap justify-center items-center/\"\r\n          />\r\n        )}\r\n        <PhoneForm addContact={this.addContact} />\r\n        <PhoneFilter filter={this.props.filter} setFilter={this.setFilter} />\r\n        {this.props.error && (\r\n          <h3 className=\"text-red-500\">{this.props.error}</h3>\r\n        )}\r\n        {this.props.contacts.length === 0 && (\r\n          <p>Contacts list is empty. Please, create new cotnact!</p>\r\n        )}\r\n        <PhoneList\r\n          contacts={this.props.filterContacts}\r\n          deleteContact={this.deleteContact}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  contacts: contactsSelector(state),\r\n  filterContacts: getFilteredContacts(state),\r\n  error: errorSelector(state),\r\n  isLoading: loaderSelector(state),\r\n});\r\nconst mapDispatchToProps = {\r\n  getAllContactsOperating,\r\n  addContactOperating,\r\n  deleteContactOperating,\r\n  setFilter,\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Phonebook);\r\n","import axios from \"axios\";\r\nimport { contactsSelector } from \"./contactsSelector\";\r\nimport {\r\n  addContact,\r\n  deleteContact,\r\n  getAllContacts,\r\n  setError,\r\n  setLoading,\r\n} from \"./phonebookActions\";\r\n\r\nconst getAllContactsOperating = () => async (dispatch) => {\r\n  dispatch(setLoading());\r\n  try {\r\n    const { data } = await axios.get(\r\n      `https://phonebook-20-default-rtdb.firebaseio.com/contacts.json`\r\n    );\r\n    if (data) {\r\n      const contacts = Object.keys(data).map((key) => ({\r\n        id: key,\r\n        ...data[key],\r\n      }));\r\n      dispatch(getAllContacts(contacts));\r\n    }\r\n  } catch (error) {\r\n    dispatch(setError(error.response.data.error));\r\n  } finally {\r\n    dispatch(setLoading());\r\n  }\r\n};\r\nconst addContactOperating = (contact) => async (dispatch, getState) => {\r\n  const contacts = contactsSelector(getState());\r\n  if (\r\n    contacts.some((cont) =>\r\n      cont.name.toLowerCase().includes(contact.name.toLowerCase())\r\n    )\r\n  ) {\r\n    dispatch(setError(`This name ${contact.name} is already exist`));\r\n    return;\r\n    // } else if (contacts.some((cont) => cont.number).includes(contact.number)) {\r\n    //   dispatch(setError(`This number ${contact.number} is already exist`));\r\n    //   return;\r\n  }\r\n  dispatch(setLoading());\r\n  try {\r\n    const { data } = await axios.post(\r\n      `https://phonebook-20-default-rtdb.firebaseio.com/contacts.json`,\r\n      contact\r\n    );\r\n    dispatch(addContact({ ...contact, id: data.name }));\r\n  } catch (error) {\r\n    dispatch(setError(error.response.data.error));\r\n  } finally {\r\n    dispatch(setLoading());\r\n  }\r\n};\r\nconst deleteContactOperating = (id) => async (dispatch) => {\r\n  dispatch(setLoading());\r\n  try {\r\n    await axios.delete(\r\n      `https://phonebook-20-default-rtdb.firebaseio.com/contacts/${id}.json`\r\n    );\r\n    dispatch(deleteContact(id));\r\n  } catch (error) {\r\n    dispatch(setError(error.response.data.error));\r\n  } finally {\r\n    dispatch(setLoading());\r\n  }\r\n};\r\n\r\nexport { getAllContactsOperating, addContactOperating, deleteContactOperating };\r\n","import Phonebook from \"./Phonebook/Phonebook\";\r\n\r\n const App=()=>(\r\n    <>\r\n    <Phonebook/>\r\n    </>\r\n)\r\nexport default App;","import { createReducer } from \"@reduxjs/toolkit\";\r\nimport {\r\n  addContact,\r\n  deleteContact,\r\n  getAllContacts,\r\n  resetError,\r\n  setError,\r\n  setFilter,\r\n  setLoading,\r\n} from \"./phonebookActions\";\r\n\r\nconst contactsReducer = createReducer([], {\r\n  [getAllContacts]: (_, { payload }) => payload,\r\n  [addContact]: (state, { payload }) => [...state, payload],\r\n  [deleteContact]: (state, { payload }) => [\r\n    ...state.filter((contact) => contact.id !== payload),\r\n  ],\r\n});\r\nconst filterReducer = createReducer(\"\", {\r\n  [setFilter]: (_, { payload }) => payload,\r\n});\r\nconst loaderReducer = createReducer(false, { [setLoading]: (state) => !state });\r\nconst errorReducer = createReducer(\"\", {\r\n  [setError]: (_, { payload }) => payload,\r\n  [resetError]: () => \"\",\r\n});\r\n\r\nexport { contactsReducer, filterReducer, errorReducer, loaderReducer };\r\n","import { combineReducers } from \"redux\";\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\nimport {\r\n  contactsReducer,\r\n  errorReducer,\r\n  filterReducer,\r\n  loaderReducer,\r\n} from \"./phonebook/phonebookReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  contacts: contactsReducer,\r\n  filter: filterReducer,\r\n  error: errorReducer,\r\n  isLoading: loaderReducer,\r\n});\r\nconst store = configureStore({ reducer: rootReducer });\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport App from \"./Components/App\";\nimport \"./index.css\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}